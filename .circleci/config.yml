version: 2.1
orbs:
  coveralls: coveralls/coveralls@1.0.6
  node: circleci/node@1.1.6

workflows:
  hardhat:
    jobs:
      - checkout-and-install-hardhat
      - compile-hardhat:
          requires:
            - checkout-and-install-hardhat
      - lint-hardhat:
          requires:
            - compile-hardhat
      - unit-test-hardhat:
          requires:
            - compile-hardhat
      - integration-test-hardhat:
          requires:
            - compile-hardhat
      - contract-size-hardhat:
          requires:
            - compile-hardhat
      - e2e-test-hardhat:
          requires:
            - compile-hardhat
  frontend:
    jobs:
      - checkout-and-install-frontend
      - unit-test-frontend:
          requires:
            - checkout-and-install-frontend
  zen-bull-vault:
    jobs:
      - lint-zen-bull-vault
      - compile-zen-bull-vault:
          requires:
            - lint-zen-bull-vault
      - test-zen-bull-vault:
          requires:
            - compile-zen-bull-vault
      - fuzzing-zen-bull-vault:
          requires:
            - compile-zen-bull-vault
      - coverage-zen-bull-vault:
          requires:
            - test-zen-bull-vault
  crab-netting:
    jobs:
      - lint-crab-netting
      - compile-crab-netting:
          requires:
            - lint-crab-netting
      - test-crab-netting:
          requires:
            - compile-crab-netting
  zen-bull-netting:
    jobs:
      - lint-zen-bull-netting
      - compile-zen-bull-netting:
          requires:
            - lint-zen-bull-netting
      - test-zen-bull-netting:
          requires:
            - compile-zen-bull-netting
      - fuzzing-zen-bull-netting:
          requires:
            - compile-zen-bull-netting
      - coverage-zen-bull-netting:
          requires:
            - test-zen-bull-netting

jobs:
  ################ hardhat jobs
  checkout-and-install-hardhat:
    working_directory: ~/squeeth/packages/hardhat
    docker:
      - image: cimg/node:16.14.0
    steps:
      - checkout:
          path: ~/squeeth
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install packages
          command: yarn install
      - save_cache: 
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - save_cache:
          key: squeeth-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/squeeth

  compile-hardhat:
    working_directory: ~/squeeth/packages/hardhat
    docker:
      - image: cimg/node:16.14.0
    steps:
      - checkout:
          path: ~/squeeth
      - restore_cache:
          key: squeeth-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Compile Contracts
          command: npx hardhat compile
      - save_cache: 
         key: typechain-cache-{{ .Environment.CIRCLE_SHA1 }}
         paths:
           - typechain
      - save_cache: 
         key: artifacts-cache-{{ .Environment.CIRCLE_SHA1 }}
         paths:
           - artifacts

  lint-hardhat:
    working_directory: ~/squeeth/packages/hardhat
    docker:
      - image: cimg/node:16.14.0
    steps:
      - checkout:
          path: ~/squeeth
      - restore_cache:
          key: squeeth-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: typechain-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Lint
          command: yarn lint:check
  
  unit-test-hardhat:
    working_directory: ~/squeeth/packages/hardhat
    docker:
      - image: cimg/node:16.14.0
    steps:
      - checkout:
          path: ~/squeeth
      - restore_cache:
          key: squeeth-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: typechain-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run: 
          name: Unit tests
          command: yarn test:crab-unit
  
  integration-test-hardhat:
    working_directory: ~/squeeth/packages/hardhat
    docker:
      - image: cimg/node:16.14.0
    steps:
      - checkout:
          path: ~/squeeth
      - restore_cache:
          key: squeeth-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: typechain-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run: 
          name: Integration tests
          command: yarn test:crab-integration
    
  contract-size-hardhat:
    working_directory: ~/squeeth/packages/hardhat
    docker:
      - image: cimg/node:16.14.0
    steps:
      - checkout:
          path: ~/squeeth
      - restore_cache:
          key: squeeth-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: artifacts-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Check Contracts Size
          command: npx hardhat size-contracts

  e2e-test-hardhat:
    working_directory: ~/squeeth/packages/hardhat
    docker:
      - image: cimg/node:16.14.0
    steps:
      - restore_cache:
          key: squeeth-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: typechain-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Set Env Variables
          command: echo "export ALCHEMY_KEY=${ALCHEMY_KEY}" >> $BASH_ENV
      - run:
          name: Mainnet E2E Test 
          command: yarn test:e2e
  
  ################ frontend jobs
  checkout-and-install-frontend:
    working_directory: ~/squeeth/packages/frontend
    docker:
      - image: cimg/node:16.14.0
    steps:
      - checkout:
          path: ~/squeeth
      - restore_cache:
          key: dependency-frontend-cache-{{ checksum "package.json" }}
      - run:
          name: Install packages
          command: yarn install
      - save_cache: 
          key: dependency-frontend-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - save_cache:
          key: squeeth-frontend-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/squeeth
  
  unit-test-frontend:
    working_directory: ~/squeeth/packages/frontend
    docker:
      - image: cimg/node:16.14.0
    steps:
      - checkout:
          path: ~/squeeth
      - restore_cache:
          key: squeeth-frontend-{{ .Environment.CIRCLE_SHA1 }}
      - run: 
          name: Unit tests
          command: yarn test:ci

  ################ zen-bull-vault jobs
  lint-zen-bull-vault:
    working_directory: ~/squeeth/packages/zen-bull
    docker:
      - image: ghcr.io/foundry-rs/foundry:latest
    steps:
      - checkout
      - run: 
          name: Lint zen-bull-vault
          command: cd packages/zen-bull-vault && FOUNDRY_PROFILE=fmt forge fmt --check

  compile-zen-bull-vault:
    working_directory: ~/squeeth/packages/zen-bull
    docker:
      - image: ghcr.io/foundry-rs/foundry:latest
    steps:
      - checkout
      - run: 
          name: Build zen-bull-vault
          command: cd packages/zen-bull-vault && forge build --force

  test-zen-bull-vault:
    working_directory: ~/squeeth/packages/zen-bull
    docker:
      - image: ghcr.io/foundry-rs/foundry:latest
    steps:
      - checkout
      - run: cd packages/zen-bull-vault && FOUNDRY_PROFILE=test forge test -vv --gas-report

  fuzzing-zen-bull-vault:
    working_directory: ~/squeeth/packages/zen-bull
    docker:
      - image: ghcr.io/foundry-rs/foundry:latest
    steps:
      - checkout
      - run:
          name: Set Env Variables
          command: echo "export FORK_URL=${FORK_URL}" >> $BASH_ENV
      - run: cd packages/zen-bull-vault && FOUNDRY_PROFILE=fuzz forge test -vv
      
  coverage-zen-bull-vault:
    working_directory: ~/squeeth/packages/zen-bull
    docker:
      - image: ghcr.io/foundry-rs/foundry:nightly-e9f274df045d36527eff66f8a6d4e836c7227231
    steps:
      - checkout
      - run: cd packages/zen-bull-vault && FOUNDRY_PROFILE=coverage forge coverage

  ################ crab-netting jobs
  lint-crab-netting:
    working_directory: ~/squeeth/packages/crab-netting
    docker:
      - image: ghcr.io/foundry-rs/foundry:latest
    steps:
      - checkout
      - run: 
          name: Lint crab-netting
          command: cd packages/crab-netting && FOUNDRY_PROFILE=fmt forge fmt --check

  compile-crab-netting:
    working_directory: ~/squeeth/packages/crab-netting
    docker:
      - image: ghcr.io/foundry-rs/foundry:latest
    steps:
      - checkout
      - run: 
          name: Build crab-netting
          command: cd packages/crab-netting && forge build --force

  test-crab-netting:
    working_directory: ~/squeeth/packages/crab-netting
    docker:
      - image: ghcr.io/foundry-rs/foundry:latest
    steps:
      - checkout
      - run: cd packages/crab-netting && forge test -vv --gas-report

  ################ zen-bull-netting jobs
  lint-zen-bull-netting:
    working_directory: ~/squeeth/packages/zen-bull-netting
    docker:
      - image: ghcr.io/foundry-rs/foundry:latest
    steps:
      - checkout
      - run: 
          name: Lint zen-bull-netting
          command: cd packages/zen-bull-netting && FOUNDRY_PROFILE=fmt forge fmt --check

  compile-zen-bull-netting:
    working_directory: ~/squeeth/packages/zen-bull-netting
    docker:
      - image: ghcr.io/foundry-rs/foundry:latest
    steps:
      - checkout
      - run: 
          name: Build zen-bull-netting
          command: cd packages/zen-bull-netting && forge build --force

  test-zen-bull-netting:
    working_directory: ~/squeeth/packages/zen-bull-netting
    docker:
      - image: ghcr.io/foundry-rs/foundry:latest
    steps:
      - checkout
      - run: cd packages/zen-bull-netting && FOUNDRY_PROFILE=test forge test -vv --gas-report

  fuzzing-zen-bull-netting:
    working_directory: ~/squeeth/packages/zen-bull-netting
    docker:
      - image: ghcr.io/foundry-rs/foundry:latest
    steps:
      - checkout
      - run:
          name: Set Env Variables
          command: echo "export FORK_URL=${FORK_URL}" >> $BASH_ENV
      - run: cd packages/zen-bull-netting && FOUNDRY_PROFILE=fuzz forge test -vv
      
  coverage-zen-bull-netting:
    working_directory: ~/squeeth/packages/zen-bull-netting
    docker:
      # - image: ghcr.io/foundry-rs/foundry:nightly-e9f274df045d36527eff66f8a6d4e836c7227231
      - image: ghcr.io/foundry-rs/foundry:latest
    steps:
      - checkout
      - run: cd packages/zen-bull-netting && FOUNDRY_PROFILE=coverage forge coverage
